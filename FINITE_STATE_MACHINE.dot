digraph LexicalAnalyzer {
  node [shape=circle, fontsize=10, fontname="Comic Sans MS", style=filled, fillcolor="white", color="black", penwidth=2, fontcolor="black"];
  rankdir=LR;
  edge [fontname = mono]
  
  START [label="START", fillcolor = yellowgreen]
  LPAR [shape=doublecircle, label="LPAR"]
  RPAR [shape=doublecircle, label="RPAR"]
  LBRACE [shape=doublecircle, label="LBRACE"]
  RBRACE [shape=doublecircle, label="RBRACE"]
  ASSIGN [shape=doublecircle, label="ASSIGN"]
  EQUAL [shape=doublecircle, label="EQUAL"]
  PLUS [shape=doublecircle, label="PLUS"]
  MINUS [shape=doublecircle, label="MINUS"]
  MULTIPLY [shape=doublecircle, label="MULTIPLY"]
  DIVIDE [shape=doublecircle, label="DIVIDE"]
  R_MUL_COMMENT [label="R_MUL_\nCOMMENT"]
  END_MUL_COMMENT [shape=doublecircle, label="END_MUL_\nCOMMENT"]
  END_SING_COMMENT [shape=doublecircle, label="END_SING_\nCOMMENT"]
  L_MUL_COMMENT [shape=doublecircle, label="L_MUL_\nCOMMENT"]
  SING_COMMENT [ label="SING_\nCOMMENT"]
  UNDERSCORE [label="UNDER\nSCORE"]
  TYPE_ID [shape=doublecircle, label="TYPE_\nID"]
  TYPE_ID_KEYWORD [shape=doublecircle, label="TYPE_\nID_\nKEYWORD"]
  ERR1 [shape=doublecircle, label="ERR"]
  ERR2 [shape=doublecircle, label="ERR"]
  // ERR3 [shape=doublecircle, label="ERR"]
  // ERR4 [shape=doublecircle, label="ERR"]
  T_INT [shape=doublecircle, label="T_INT"]
  T_FLOAT [shape=doublecircle, label="T_FLOAT"]
  EXPONENT [label="EXPONENT"]
  EXPONENT_SIGN [label="EXPONENT_\nSIGN"]
  EXPONENT_NUM [shape=doublecircle, label="EXPONENT_\nNUM"]
  EXPONENT_FLOAT [shape=doublecircle, label="EXPONENT_\nFLOAT"]
  SEMICOLON [shape=doublecircle, label="SEMICOLON"]
  COMMA [shape=doublecircle, label="COMMA"]
  COLON [shape=doublecircle, label="COLON"]
  LESS [shape=doublecircle, label="LESS"]
  GREATER [shape=doublecircle, label="GREATER"]
  LESS_EQUAL [shape=doublecircle, label="LESS_\nEQUAL"]
  GREATER_EQUAL [shape=doublecircle, label="GREATER_\nEQUAL"]
  // NOT_EQUAL [shape=doublecircle, label="NOT_\nEQUAL"]

  START -> LPAR [label=" ("]
  START -> RPAR [label="  )"]

  START -> LBRACE [label=" {"]
  START -> RBRACE [label="  }"]

  START -> ASSIGN [label="="]
  ASSIGN -> EQUAL [label="  ="]
  
  START -> PLUS [label="+"]

  START -> MINUS [label="-"]
   
  START -> MULTIPLY [label="*"]
  
  START -> DIVIDE [label="/"]
  DIVIDE -> L_MUL_COMMENT [label="  *"]

  L_MUL_COMMENT -> R_MUL_COMMENT [label="  *"]

  R_MUL_COMMENT -> L_MUL_COMMENT [label="else"]
  R_MUL_COMMENT -> END_MUL_COMMENT [label="  /"]

  DIVIDE -> SING_COMMENT [label="/"]
  SING_COMMENT -> SING_COMMENT [label="else"]
  SING_COMMENT -> END_SING_COMMENT [label="\\n"]

  START -> TYPE_ID_KEYWORD [label="a-z | A-Z "]

  START -> UNDERSCORE [label="_       "]
  UNDERSCORE -> TYPE_ID [label="a-z | A-Z | _ | 0-9"]
  UNDERSCORE -> ERR1 [label="else"]

  TYPE_ID_KEYWORD -> TYPE_ID_KEYWORD [label="a-z | A-Z"]
  TYPE_ID_KEYWORD -> TYPE_ID [label=" _ | 0-9"]
  
  TYPE_ID -> TYPE_ID [label="a-z | A-Z | _ | 0-9"]

  START -> T_INT [label="0-9"]
  T_INT -> T_INT [label="0-9"]
  T_INT -> T_FLOAT [label="."]

  T_INT -> EXPONENT [label="e | E"]
  EXPONENT -> EXPONENT_SIGN [label=" + | -"]
  EXPONENT -> EXPONENT_NUM [label="0-9"]
  EXPONENT_SIGN -> EXPONENT_NUM [label="0-9"]
  EXPONENT_NUM -> EXPONENT_NUM [label="0-9"]
  EXPONENT_NUM -> EXPONENT_FLOAT [label="."]
  EXPONENT_FLOAT -> EXPONENT_FLOAT [label="0-9"]

  EXPONENT_FLOAT -> ERR2 [label="else"]
  EXPONENT_NUM -> ERR2 [label="else"]
  // EXPONENT -> TYPE_ID [label="a-z | A-Z | _ | 0-9"]
  
  START -> COLON [label=":"]
  START -> SEMICOLON [label=";"]
  START -> COMMA [label=","]

  START -> LESS [label="<"]
  LESS -> LESS_EQUAL [label="="]
  START -> GREATER [label=">"]
  GREATER -> GREATER_EQUAL [label="="]
}
