# IFJ dlya liudiej bez lichnoi zhizni
.IFJcode23
JUMP $$main

# Write function
LABEL $%write
WRITE LF@%param
RETURN
# end of write ---------

# Int2Double function
LABEL $%int2float
PUSHFRAME
DEFVAR LF@%retval
INT2FLOAT LF@%retval LF@%param
POPFRAME
RETURN
# end of int2float ---------

# Double2Int function
LABEL $%Double2int
PUSHFRAME
DEFVAR LF@%retval
FLOAT2INT LF@%retval LF@%param
POPFRAME
RETURN
# end of double2int ---------

# Length function
LABEL $%length
PUSHFRAME
DEFVAR LF@%retval
STRLEN LF@%retval LF@%param
POPFRAME
RETURN
# end of length ---------

# ReadString function
LABEL $%%readString
CREATEFRAME
PUSHFRAME
DEFVAR LF@%retval
DEFVAR LF@%string_tmp
DEFVAR LF@%bool
DEFVAR LF@%len
READ LF@%string_tmp string
STRLEN LF@%len LF@%string_tmp
EQ LF@%bool LF@%len int@0
JUMPIFEQ $%eq_to_zero_readstring LF@%bool bool@true
PUSHS LF@%string_tmp
JUMP $%readString_end
LABEL $%eq_to_zero_readstring
PUSHS nil@nil
LABEL $%readString_end
POPFRAME
RETURN
# end of readString ---------

# ReadInt function
LABEL $%%readInt
CREATEFRAME
PUSHFRAME
DEFVAR LF@%retval
DEFVAR LF@%int_tmp
DEFVAR LF@%bool
DEFVAR LF@%len
READ LF@%int_tmp int
STRLEN LF@%len LF@%int_tmp
EQ LF@%bool LF@%len int@0
JUMPIFEQ $%eq_to_zero_readInt LF@%bool bool@true
MOVE LF@%retval LF@%int_tmp
JUMP $%readInt_end
LABEL $%eq_to_zero_readint
MOVE LF@%retval nil@nil
LABEL $%readInt_end
POPFRAME
RETURN
# end of readInt ---------

# Ord function
LABEL $%ord
PUSHFRAME
DEFVAR LF@%retval
DEFVAR LF@%strlen
STRLEN LF@%strlen LF@%param
DEFVAR LF@%bool
EQ LF@%bool LF@%strlen int@0
JUMPIFEQ $%eq_to_zero LF@%bool bool@true
STRI2INT LF@%retval LF@%param int@0
JUMP $%ord_end
LABEL $%eq_to_zero
MOVE LF@%retval int@0
LABEL $%ord_end
POPFRAME
RETURN
# end of ord ---------


LABEL $$main
DEFVAR GF@%%retval_main
DEFVAR GF@?temp_1
DEFVAR GF@?temp_2
DEFVAR GF@&str
MOVE GF@&str string@
CREATEFRAME
PUSHFRAME
JUMP **main_declares**
LABEL **main_declares_return**
DEFVAR GF@%%res

DEFVAR GF@str1_0
PUSHS string@Toto\032je\032nejaky\032text\032v\032programu\032jazyka\032IFJ23
POPS GF@str1_0
CLEARS

DEFVAR GF@str2_0
PUSHS GF@str1_0
PUSHS string@,\032ktery\032jeste\032trochu\032obohatime
POPS GF@?temp_1
POPS GF@?temp_2
CONCAT GF@&str GF@&str GF@?temp_2
CONCAT GF@&str GF@&str GF@?temp_1
PUSHS GF@&str
POPS GF@str2_0
CLEARS


# write(...)
WRITE GF@str1_0

# write(...)
WRITE string@\010

# write(...)
WRITE GF@str2_0

# write(...)
WRITE string@\010
DEFVAR GF@i_0
PUSHS GF@str1_0
POPS GF@&str
STRLEN GF@?temp_1 GF@&str
PUSHS GF@?temp_1
POPS GF@i_0
CLEARS


# write(...)
WRITE string@Pozice\032retezce\032\034text\034\032v\032str2:\032

# write(...)
WRITE GF@i_0

# write(...)
WRITE string@\010

# write(...)
WRITE string@Zadejte\032serazenou\032posloupnost\032vsech\032malych\032pismen\032a-h,\032
DEFVAR GF@newInput_0
CALL $%%readString
POPS GF@newInput_0
CLEARS

PUSHS int@5
PUSHS int@5
EQS
# if (res) 
POPS GF@%%res
JUMPIFNEQ $IF_ELSE_d0_c0 GF@%%res bool@true
# {
PUSHS GF@newInput_0
POPS GF@str1_0
CLEARS


# while {
LABEL $WHILE_START_d1_c0
PUSHS GF@str1_0
PUSHS string@abcdefgh
EQS
NOTS

# while (res) 
POPS GF@%%res
JUMPIFNEQ $WHILE_END_d1_c0 GF@%%res bool@true
# }


# write(...)
WRITE string@Spatne\032zadana\032posloupnost,\032zkuste\032znovu:\010
CALL $%%readString
POPS LF@tmp_2
CLEARS

PUSHS LF@tmp_2
PUSHS string@
POPS GF@?temp_1
POPS GF@?temp_2
PUSHS GF@?temp_2
POPS GF@str1_0
CLEARS

JUMP $WHILE_START_d1_c0
# }

LABEL $WHILE_END_d1_c0
JUMP $IF_END_d0_c0
# }

# else { 
LABEL $IF_ELSE_d0_c0

LABEL $IF_END_d0_c0
# }

LABEL **main**

# EXIT 
POPFRAME
EXIT int@0


LABEL **main_declares**
DEFVAR LF@tmp_2
JUMP **main_declares_return**
