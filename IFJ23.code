# IFJ dlya liudiej bez lichnoi zhizni
.IFJcode23
JUMP $$main

# Write function
LABEL $%write
WRITE LF@%param
RETURN
# end of write ---------

# Int2Double function
LABEL $%int2float
PUSHFRAME
DEFVAR LF@%retval
INT2FLOAT LF@%retval LF@%param
POPFRAME
RETURN
# end of int2float ---------

# Double2Int function
LABEL $%double2int
PUSHFRAME
DEFVAR LF@%retval
FLOAT2INT LF@%retval LF@%param
POPFRAME
RETURN
# end of double2int ---------

# Length function
LABEL $%length
PUSHFRAME
DEFVAR LF@%retval
STRLEN LF@%retval LF@%param
POPFRAME
RETURN
# end of length ---------

# Ord function
LABEL $%ord
PUSHFRAME
DEFVAR LF@%retval
DEFVAR LF@%strlen
STRLEN LF@%strlen LF@%param
DEFVAR LF@%bool
EQ LF@%bool LF@%strlen int@0
JUMPIFEQ $%eq_to_zero LF@%bool bool@true
STRI2INT LF@%retval LF@%param int@0
JUMP $%ord_end
LABEL $%eq_to_zero
MOVE LF@%retval int@0
LABEL $%ord_end
POPFRAME
RETURN
# end of ord ---------


LABEL $$main
DEFVAR GF@%%retval_main
DEFVAR GF@?temp_1
DEFVAR GF@?temp_2
CREATEFRAME
PUSHFRAME
DEFVAR GF@%%res
# declare a var
DEFVAR GF@b_0
PUSHS int@5
POPS GF@b_0

# declare a var
DEFVAR GF@a_0
PUSHS int@1
PUSHS int@1
SUBS
POPS GF@a_0

PUSHS unknown@ÀT“ˆìU
PUSHS unknown@ÀT“ˆìU
EQS

# if (res) 
POPS GF@%%res
JUMPIFNEQ $IF_ELSE_d0 GF@%res bool@true
# {
# declare a var
DEFVAR LF@c_1
PUSHS nil@nil
POPS LF@c_1

# declare a var
DEFVAR LF@d_1
PUSHS int@2
POPS LF@d_1

# declare a var
DEFVAR LF@e_1
PUSHS int@3
PUSHS int@3
ADDS
POPS LF@e_1

JUMP $IF_END_d0
# }

# else { 
LABEL $IF_ELSE_d0
LABEL $IF_END_d0
# }


# EXIT 
EXIT int@0
