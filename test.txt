// var a = length("Hello")
// var a = length("Hello")
// write(a)

write("Zadejte cislo pro vypocet faktorialu\n")
// let a : Int? = readInt()!
let a : Int = readInt()
// if let a {




// if (a < 0) {write("Faktorial nelze spocitat\n")
// } else {
// var a = Int2Double(a)

// var vysl : Double = 1

// while (a > 0.0) {
// vysl = vysl * a
// a = a - 1
// }
// write("Vysledek je: ", vysl, "\n")
// }
// } else {
// write("Chyba pri nacitani celeho cisla!\n")
// }


// var b: Int = 0 // You need to initialize 'b' before using it
// // var a: Int = 1

// // Uncomment the following line if you want to change the value of 'a'
// // a = 67 + 1 + a
// var b: Int = 0
// var a: Int? = readInt(b) 
// write(a)

// var a : Int = 1
// if (a > 0) {
//     var a: Int = 2
//     if (a > 0) {
//         var b: Int = 3
//         if (a > 0) {
//             var b: Int = 4
//             write(b)
//         } else {}
//     } else {}
// } else {}

// func GRINFIND () -> Int {
// func GRINFIND (_ a: Int, _ b: Int) -> Int {
//     // var c: Int = a
//     // if (a > b) {
//     //     c = a
//     // } else {
//     //     c = b
//     // }
//     // a = 1

//     // var outerCounter = 0
//     // var innerCounter = 0
//     // while (innerCounter < 3) {
//         // write("Inner Counter:", innerCounter, "\n")

//         // Increment inner loop counter
//         // innerCounter = 1 + innerCounter
//     // }
//     return a / b
// }

// var str1 = "Toto je nejaky text v programu jazyka IFJ23"
// let str2 = str1 + ", ktery jeste trochu obohatime"
// write(str1, "\n", str2, "\n")
// let i = length(str1)
// write("Pozice retezce \"text\" v str2: ", i, "\n")
// write("Zadejte serazenou posloupnost vsech malych pismen a-h, ")
// let newInput = readString()!
// if (5 == 5) {
// str1 = newInput
// while (str1 != "abcdefgh") {
// write("Spatne zadana posloupnost, zkuste znovu:\n")
// let tmp = readString()!
// str1 = tmp ?? ""
// }
// } else {}

// var a = 1

// var a = GRINFIND()
// var a = GRINFIND(555555, 22222)
// write("\n", a, "\n\n")


// var outerCounter = 0
// var innerCounter = 0

// while (outerCounter < 5) {
//     write("Outer Counter:", outerCounter, "\n")

    // while (innerCounter < 3) {
    //     write("Inner Counter:", innerCounter, "\n")

    //     // Increment inner loop counter
    //     innerCounter = 1 + innerCounter
    // }

//     innerCounter = 0
    
//     while (innerCounter < 3) {
//         write("Inner Counter:", innerCounter, "\n")

//         // Increment inner loop counter
//         innerCounter = 1 + innerCounter
//     }

//     // Reset inner loop condition and counter for the next iteration of outer loop
//     // innerLoopCondition = true
//     innerCounter = 0

//     // Increment outer loop counter
//     outerCounter = 1 + outerCounter
// }

// var b : Int = 0
// var print : String = "ahoj!\n"

// while (a >= 0) {
    // write(b)
    // b = b + 1	
    // a = a - 1
// }

// var a = "ahoj\n"
// var b = "Dima"
// var c = "ahoj"

// var d = a + b + c

// write(d)
// if (1==1) {
//     var a: Int = 1
//     write(a)
// } else {
// }

// if (1==1) {
//     var a: Int = 50
//     write(a)
// } else {
// }

// To test the output, you can print 'b'
// print(b)

  

// if (a==a) {
//     var OUTERIF = 5
//     // var c : Int? = nil

//     if (a==a) {
//         var INNERIF = 5
//         // var c : Int? = nil
//         // return a // 5 - 2 = 3
//     }
//     else {
//         var INNERELSE = 5
//         // var c : Int? = nil
//         // return a // 5 - 2 = 3
//     }

//     if (a==a) {
//         var INNERIF = 5
//         // var c : Int? = nil
//         // return a // 5 - 2 = 3
//     }
//     else {
//         var INNERELSE = 5
//         // var c : Int? = nil
//         // return a // 5 - 2 = 3
//     }

// }
// else {
//     var OUTERELSE = 5
//     // var c : Int? = nil
//     // return a // 5 - 2 = 3
// }


//func sum(_ a: Int, _ b: Int) -> Int {
//    var c = 4
//    return a
//}
//var f = 4
//var result = sum(f, 2)